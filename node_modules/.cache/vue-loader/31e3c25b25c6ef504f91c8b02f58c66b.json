{"remainingRequest":"D:\\123\\shppingmall\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\123\\shppingmall\\node_modules\\vue-piczoom\\src\\components\\PicZoom.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\123\\shppingmall\\node_modules\\vue-piczoom\\src\\components\\PicZoom.vue","mtime":1522905033000},{"path":"D:\\123\\shppingmall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660838990085},{"path":"D:\\123\\shppingmall\\node_modules\\babel-loader\\lib\\index.js","mtime":1660839010711},{"path":"D:\\123\\shppingmall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660838990085},{"path":"D:\\123\\shppingmall\\node_modules\\vue-loader\\lib\\index.js","mtime":1660839006986}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props:{\n        scale:{\n            type:Number,\n            default:2.5\n        },\n        url:{\n            type:String,\n            required:true\n        },\n        bigUrl:{\n            type:String,\n            default:null\n        },\n        scroll:{\n            type:Boolean,\n            default:false\n        },\n        showEidt:{\n            type:Boolean,\n            default:false\n        }\n    },\n    data () {\n        return {\n            id:null,\n            cover:null,\n            imgbox:null,\n            imgwrap:null,\n            orginUrl:null,\n            bigImgUrl:null,\n            bigOrginUrl:null,\n            imgUrl:null,\n            img:null,\n            canvas:null,\n            ctx:null,\n            rectTimesX:0,\n            rectTimesY:0,\n            imgTimesX:0,\n            imgTimesY:0,\n            init:false,\n            step:0,\n            bigStep:0,\n            vertical:false,\n            showImg:true\n        }\n    },\n    created(){\n    　　var $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';    /****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/\n    　　var maxPos = $chars.length;\n    　　var str = '';\n    　　for (let i = 0; i < 10; i++) {\n            str += $chars.charAt(Math.floor(Math.random() * maxPos));\n    　　}\n        this.id=str\n        this.imgUrl=this.url\n        this.orginUrl=this.url\n        this.bigImgUrl=this.bigUrl\n        this.bigOrginUrl=this.bigUrl\n    },\n    watch:{\n        url:function(val){\n            this.imgUrl=val\n            this.orginUrl=val\n            this.initTime()\n        },\n        bigUrl:function(){\n            this.bigImgUrl=bigUrl\n            this.bigOrginUrl=bigUrl\n            this.initTime()\n        }\n    },\n    mounted(){\n        this.$nextTick(()=>{\n            this.initTime()\n        })\n    },\n    methods: {\n        initTime(){\n            this.init=false\n            let box=this.$refs[this.id]\n            this.imgbox=box\n            this.cover=box.querySelector('.mouse-cover')\n            this.cover.style.width=(this.imgbox.offsetWidth/this.scale)+'px'\n            this.cover.style.height=(this.imgbox.offsetHeight/this.scale)+'px'\n            this.cover.style.left='-100%'\n            this.cover.style.top='-100%'\n            this.imgwrap=box.querySelector('img')\n            let imgsrc;\n            if(this.bigImgUrl){\n                imgsrc=this.bigImgUrl\n            }else{\n                imgsrc=this.imgUrl\n            }\n            \n            this.img=new Image()\n            this.img.src=imgsrc\n            this.img.onload=()=>{\n                this.rectTimesX=(this.imgbox.offsetWidth/this.scale)/this.imgwrap.offsetWidth,\n                this.rectTimesY=(this.imgbox.offsetHeight/this.scale)/this.imgwrap.offsetHeight\n                this.imgTimesX=this.img.width/this.imgwrap.offsetWidth,\n                this.imgTimesY=this.img.height/this.imgwrap.offsetHeight\n                this.vertical=this.img.width<this.img.height\n                this.init=true\n            }\n            if(this.canvas){\n                this.canvas.parentNode.removeChild(this.canvas);\n                this.canvas=null\n            }\n            this.canvas=document.createElement('canvas')\n            this.canvas.className='mouse-cover-canvas'\n            this.canvas.style.position='absolute'\n            this.canvas.style.left=this.imgbox.offsetLeft+this.imgbox.offsetWidth+10+'px'\n            this.canvas.style.top=this.imgbox.offsetTop+'px'\n            this.canvas.style.border='1px solid #eee'\n            this.canvas.style.zIndex='99999'\n            this.canvas.height=this.imgbox.offsetHeight\n            this.canvas.width=this.imgbox.offsetWidth\n            this.canvas.style.display='none'\n            document.body.append(this.canvas)\n            this.ctx=this.canvas.getContext(\"2d\");\n            this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);\n        },\n        initBox(){\n            this.showImg=false\n            this.canvas.style.display='none'\n            let box=this.$refs[this.id]\n            let imgsrc;\n            if(this.bigImgUrl){\n                imgsrc=this.bigImgUrl\n            }else{\n                imgsrc=this.imgUrl\n                \n            }\n            this.img=new Image()\n            this.img.src=imgsrc\n            this.img.onload=()=>{\n                this.vertical=this.img.width<this.img.height\n                this.showImg=true\n                let thumb=box.querySelector('img')\n                setTimeout(() => {\n                    this.rectTimesX=(this.imgbox.offsetWidth/this.scale)/box.querySelector('img').offsetWidth,\n                    this.rectTimesY=(this.imgbox.offsetHeight/this.scale)/box.querySelector('img').offsetHeight\n                }, 20);\n            }\n            \n        },\n        mousemove(e){\n            if(!this.init){\n                return false\n            }\n            let _this=this\n            //获取实际的offset\n            function offset(curEle){\n                var totalLeft = null,totalTop = null,par = curEle.offsetParent;\n                //首先加自己本身的左偏移和上偏移\n                totalLeft+=curEle.offsetLeft;\n                totalTop+=curEle.offsetTop\n                //只要没有找到body，我们就把父级参照物的边框和偏移也进行累加\n                while(par){\n                    if(navigator.userAgent.indexOf(\"MSIE 8.0\")===-1){\n                    //累加父级参照物的边框\n                    totalLeft+=par.clientLeft;\n                    totalTop+=par.clientTop\n                    }\n                    \n                    //累加父级参照物本身的偏移\n                    totalLeft+=par.offsetLeft;\n                    totalTop+=par.offsetTop\n                    par = par.offsetParent;\n                }\n            \n                return{\n                    left:totalLeft,\n                    top:totalTop\n                }\n            }\n\n            function getXY(eve) {\n                return {\n                    x : eve.clientX -(_this.cover.offsetWidth/2),\n                    y : eve.clientY-(_this.cover.offsetHeight/2) \n                };\n            }\n            let oEvent = e || event;\n            let pos = getXY(oEvent);\n            let imgwrap=offset(this.imgwrap)\n            let range={\n                minX:imgwrap.left,\n                maxX:imgwrap.left+this.imgwrap.offsetWidth-this.cover.offsetWidth,\n                minY:imgwrap.top-document.documentElement.scrollTop,\n                maxY:imgwrap.top-document.documentElement.scrollTop+this.imgwrap.offsetHeight-this.cover.offsetHeight,\n            }\n            if(pos.x>range.maxX){\n                pos.x=range.maxX\n            }\n            if(pos.x<range.minX){\n                pos.x=range.minX\n            }\n            if(pos.y>range.maxY){\n                pos.y=range.maxY\n            }\n            if(pos.y<range.minY){\n                pos.y=range.minY\n            }\n            this.cover.style.left=pos.x+'px'\n            this.cover.style.top=pos.y+'px'\n            this.ctx.clearRect(0,0,this.imgwrap.offsetWidth,this.imgwrap.offsetHeight);\n            let startX=pos.x-(imgwrap.left-document.documentElement.scrollLeft),\n            startY=pos.y-(imgwrap.top-document.documentElement.scrollTop)\n            this.ctx.drawImage(this.img,startX*this.imgTimesX,startY*this.imgTimesY,this.img.width*this.rectTimesX,this.img.height*this.rectTimesY,0,0,this.imgbox.offsetWidth,this.imgbox.offsetHeight);\n            \n        },\n        mouseover(e){\n            if(!this.init){\n                return false\n            }\n            e=e||event\n            if(!this.scroll){\n                e.currentTarget.addEventListener(\"mousewheel\",function(ev){\n                    ev.preventDefault();\n                },false);\n\n                e.currentTarget.addEventListener(\"DOMMouseScroll\",function(ev){\n                    ev.preventDefault();\n                },false);\n            }\n            \n            this.cover.style.display='block'\n            this.canvas.style.display='block'\n        },\n        mouseleave(){\n            if(!this.init){\n                return false\n            }\n            this.cover.style.display='none'\n            this.canvas.style.display='none'\n        },\n        rotate(direction){\n            var orginImg=new Image()\n            orginImg.crossOrigin = \"Anonymous\";\n            orginImg.src=this.orginUrl\n            orginImg.onload=()=>{\n                this.rotateImg(orginImg,direction,this.step)\n            }\n            if(this.bigOrginUrl){\n                var bigOrginImg=new Image()\n                orginImg.crossOrigin = \"Anonymous\";\n                bigOrginImg.src=this.bigOrginUrl\n                bigOrginImg.onload=()=>{\n                    this.rotateImg(bigOrginImg,direction,this.bigStep,true)\n                }\n            }\n            \n        },\n        rotateImg(img,direction,step,isBig=false){\n            var min_step = 0;\n            var max_step = 3;\n            if (img == null) return;\n            //img的高度和宽度不能在img元素隐藏后获取，否则会出错    \n            var height = img.height;\n            var width = img.width;\n            \n            if (step == null) {\n                step = min_step;\n            }\n            if (direction == 'right') {\n                step++;\n                //旋转到原位置，即超过最大值    \n                step > max_step && (step = min_step);\n            } else {\n                step--;\n                step < min_step && (step = max_step);\n            }   \n            var canvas = document.createElement('canvas')  \n            \n            //旋转角度以弧度值为参数    \n            var degree = step * 90 * Math.PI / 180;\n            var ctx = canvas.getContext('2d');\n            canvas.width = height;\n            canvas.height = width;\n            ctx.rotate(degree);\n            ctx.drawImage(img, 0, -height);\n            switch (step) {\n                case 0:\n                    canvas.width = width;\n                    canvas.height = height;\n                    ctx.drawImage(img, 0, 0);\n                    break;\n                case 1:\n                    canvas.width = height;\n                    canvas.height = width;\n                    ctx.rotate(degree);\n                    ctx.drawImage(img, 0, -height);\n                    break;\n                case 2:\n                    canvas.width = width;\n                    canvas.height = height;\n                    ctx.rotate(degree);\n                    ctx.drawImage(img, -width, -height);\n                    break;\n                case 3:\n                    canvas.width = height;\n                    canvas.height = width;\n                    ctx.rotate(degree);\n                    ctx.drawImage(img, -width, 0);\n                    break;\n            }\n            var newImg=canvas.toDataURL()\n            \n            if(isBig){\n                this.bigImgUrl=newImg\n                this.bigStep=step\n                this.initBox()\n            }else{\n                this.imgUrl=newImg\n                this.step=step\n                this.$nextTick(()=>{\n                    this.initBox()\n                })\n            }\n        },\n    }\n}\n",{"version":3,"sources":["PicZoom.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PicZoom.vue","sourceRoot":"node_modules/vue-piczoom/src/components","sourcesContent":["<template>\r\n    <div class=\"magnifier-box\" :class=\"vertical?'vertical':''\" :ref=\"id\" @mousemove=\"mousemove\" @mouseover=\"mouseover\" @mouseleave=\"mouseleave\">\r\n        <img v-show=\"showImg\" :src=\"imgUrl\" alt=\"\">\r\n        <div class=\"mouse-cover\"></div>\r\n        <div class=\"edit-wrap\" v-if=\"showEidt\">\r\n            <span class=\"rotate-left\" @click=\"rotate('left')\"></span>\r\n            <span class=\"rotate-right\" @click=\"rotate('right')\"></span>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props:{\r\n            scale:{\r\n                type:Number,\r\n                default:2.5\r\n            },\r\n            url:{\r\n                type:String,\r\n                required:true\r\n            },\r\n            bigUrl:{\r\n                type:String,\r\n                default:null\r\n            },\r\n            scroll:{\r\n                type:Boolean,\r\n                default:false\r\n            },\r\n            showEidt:{\r\n                type:Boolean,\r\n                default:false\r\n            }\r\n        },\r\n        data () {\r\n            return {\r\n                id:null,\r\n                cover:null,\r\n                imgbox:null,\r\n                imgwrap:null,\r\n                orginUrl:null,\r\n                bigImgUrl:null,\r\n                bigOrginUrl:null,\r\n                imgUrl:null,\r\n                img:null,\r\n                canvas:null,\r\n                ctx:null,\r\n                rectTimesX:0,\r\n                rectTimesY:0,\r\n                imgTimesX:0,\r\n                imgTimesY:0,\r\n                init:false,\r\n                step:0,\r\n                bigStep:0,\r\n                vertical:false,\r\n                showImg:true\r\n            }\r\n        },\r\n        created(){\r\n        　　var $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';    /****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/\r\n        　　var maxPos = $chars.length;\r\n        　　var str = '';\r\n        　　for (let i = 0; i < 10; i++) {\r\n                str += $chars.charAt(Math.floor(Math.random() * maxPos));\r\n        　　}\r\n            this.id=str\r\n            this.imgUrl=this.url\r\n            this.orginUrl=this.url\r\n            this.bigImgUrl=this.bigUrl\r\n            this.bigOrginUrl=this.bigUrl\r\n        },\r\n        watch:{\r\n            url:function(val){\r\n                this.imgUrl=val\r\n                this.orginUrl=val\r\n                this.initTime()\r\n            },\r\n            bigUrl:function(){\r\n                this.bigImgUrl=bigUrl\r\n                this.bigOrginUrl=bigUrl\r\n                this.initTime()\r\n            }\r\n        },\r\n        mounted(){\r\n            this.$nextTick(()=>{\r\n                this.initTime()\r\n            })\r\n        },\r\n        methods: {\r\n            initTime(){\r\n                this.init=false\r\n                let box=this.$refs[this.id]\r\n                this.imgbox=box\r\n                this.cover=box.querySelector('.mouse-cover')\r\n                this.cover.style.width=(this.imgbox.offsetWidth/this.scale)+'px'\r\n                this.cover.style.height=(this.imgbox.offsetHeight/this.scale)+'px'\r\n                this.cover.style.left='-100%'\r\n                this.cover.style.top='-100%'\r\n                this.imgwrap=box.querySelector('img')\r\n                let imgsrc;\r\n                if(this.bigImgUrl){\r\n                    imgsrc=this.bigImgUrl\r\n                }else{\r\n                    imgsrc=this.imgUrl\r\n                }\r\n                \r\n                this.img=new Image()\r\n                this.img.src=imgsrc\r\n                this.img.onload=()=>{\r\n                    this.rectTimesX=(this.imgbox.offsetWidth/this.scale)/this.imgwrap.offsetWidth,\r\n                    this.rectTimesY=(this.imgbox.offsetHeight/this.scale)/this.imgwrap.offsetHeight\r\n                    this.imgTimesX=this.img.width/this.imgwrap.offsetWidth,\r\n                    this.imgTimesY=this.img.height/this.imgwrap.offsetHeight\r\n                    this.vertical=this.img.width<this.img.height\r\n                    this.init=true\r\n                }\r\n                if(this.canvas){\r\n                    this.canvas.parentNode.removeChild(this.canvas);\r\n                    this.canvas=null\r\n                }\r\n                this.canvas=document.createElement('canvas')\r\n                this.canvas.className='mouse-cover-canvas'\r\n                this.canvas.style.position='absolute'\r\n                this.canvas.style.left=this.imgbox.offsetLeft+this.imgbox.offsetWidth+10+'px'\r\n                this.canvas.style.top=this.imgbox.offsetTop+'px'\r\n                this.canvas.style.border='1px solid #eee'\r\n                this.canvas.style.zIndex='99999'\r\n                this.canvas.height=this.imgbox.offsetHeight\r\n                this.canvas.width=this.imgbox.offsetWidth\r\n                this.canvas.style.display='none'\r\n                document.body.append(this.canvas)\r\n                this.ctx=this.canvas.getContext(\"2d\");\r\n                this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);\r\n            },\r\n            initBox(){\r\n                this.showImg=false\r\n                this.canvas.style.display='none'\r\n                let box=this.$refs[this.id]\r\n                let imgsrc;\r\n                if(this.bigImgUrl){\r\n                    imgsrc=this.bigImgUrl\r\n                }else{\r\n                    imgsrc=this.imgUrl\r\n                    \r\n                }\r\n                this.img=new Image()\r\n                this.img.src=imgsrc\r\n                this.img.onload=()=>{\r\n                    this.vertical=this.img.width<this.img.height\r\n                    this.showImg=true\r\n                    let thumb=box.querySelector('img')\r\n                    setTimeout(() => {\r\n                        this.rectTimesX=(this.imgbox.offsetWidth/this.scale)/box.querySelector('img').offsetWidth,\r\n                        this.rectTimesY=(this.imgbox.offsetHeight/this.scale)/box.querySelector('img').offsetHeight\r\n                    }, 20);\r\n                }\r\n                \r\n            },\r\n            mousemove(e){\r\n                if(!this.init){\r\n                    return false\r\n                }\r\n                let _this=this\r\n                //获取实际的offset\r\n                function offset(curEle){\r\n                    var totalLeft = null,totalTop = null,par = curEle.offsetParent;\r\n                    //首先加自己本身的左偏移和上偏移\r\n                    totalLeft+=curEle.offsetLeft;\r\n                    totalTop+=curEle.offsetTop\r\n                    //只要没有找到body，我们就把父级参照物的边框和偏移也进行累加\r\n                    while(par){\r\n                        if(navigator.userAgent.indexOf(\"MSIE 8.0\")===-1){\r\n                        //累加父级参照物的边框\r\n                        totalLeft+=par.clientLeft;\r\n                        totalTop+=par.clientTop\r\n                        }\r\n                        \r\n                        //累加父级参照物本身的偏移\r\n                        totalLeft+=par.offsetLeft;\r\n                        totalTop+=par.offsetTop\r\n                        par = par.offsetParent;\r\n                    }\r\n                \r\n                    return{\r\n                        left:totalLeft,\r\n                        top:totalTop\r\n                    }\r\n                }\r\n\r\n                function getXY(eve) {\r\n                    return {\r\n                        x : eve.clientX -(_this.cover.offsetWidth/2),\r\n                        y : eve.clientY-(_this.cover.offsetHeight/2) \r\n                    };\r\n                }\r\n                let oEvent = e || event;\r\n                let pos = getXY(oEvent);\r\n                let imgwrap=offset(this.imgwrap)\r\n                let range={\r\n                    minX:imgwrap.left,\r\n                    maxX:imgwrap.left+this.imgwrap.offsetWidth-this.cover.offsetWidth,\r\n                    minY:imgwrap.top-document.documentElement.scrollTop,\r\n                    maxY:imgwrap.top-document.documentElement.scrollTop+this.imgwrap.offsetHeight-this.cover.offsetHeight,\r\n                }\r\n                if(pos.x>range.maxX){\r\n                    pos.x=range.maxX\r\n                }\r\n                if(pos.x<range.minX){\r\n                    pos.x=range.minX\r\n                }\r\n                if(pos.y>range.maxY){\r\n                    pos.y=range.maxY\r\n                }\r\n                if(pos.y<range.minY){\r\n                    pos.y=range.minY\r\n                }\r\n                this.cover.style.left=pos.x+'px'\r\n                this.cover.style.top=pos.y+'px'\r\n                this.ctx.clearRect(0,0,this.imgwrap.offsetWidth,this.imgwrap.offsetHeight);\r\n                let startX=pos.x-(imgwrap.left-document.documentElement.scrollLeft),\r\n                startY=pos.y-(imgwrap.top-document.documentElement.scrollTop)\r\n                this.ctx.drawImage(this.img,startX*this.imgTimesX,startY*this.imgTimesY,this.img.width*this.rectTimesX,this.img.height*this.rectTimesY,0,0,this.imgbox.offsetWidth,this.imgbox.offsetHeight);\r\n                \r\n            },\r\n            mouseover(e){\r\n                if(!this.init){\r\n                    return false\r\n                }\r\n                e=e||event\r\n                if(!this.scroll){\r\n                    e.currentTarget.addEventListener(\"mousewheel\",function(ev){\r\n                        ev.preventDefault();\r\n                    },false);\r\n\r\n                    e.currentTarget.addEventListener(\"DOMMouseScroll\",function(ev){\r\n                        ev.preventDefault();\r\n                    },false);\r\n                }\r\n                \r\n                this.cover.style.display='block'\r\n                this.canvas.style.display='block'\r\n            },\r\n            mouseleave(){\r\n                if(!this.init){\r\n                    return false\r\n                }\r\n                this.cover.style.display='none'\r\n                this.canvas.style.display='none'\r\n            },\r\n            rotate(direction){\r\n                var orginImg=new Image()\r\n                orginImg.crossOrigin = \"Anonymous\";\r\n                orginImg.src=this.orginUrl\r\n                orginImg.onload=()=>{\r\n                    this.rotateImg(orginImg,direction,this.step)\r\n                }\r\n                if(this.bigOrginUrl){\r\n                    var bigOrginImg=new Image()\r\n                    orginImg.crossOrigin = \"Anonymous\";\r\n                    bigOrginImg.src=this.bigOrginUrl\r\n                    bigOrginImg.onload=()=>{\r\n                        this.rotateImg(bigOrginImg,direction,this.bigStep,true)\r\n                    }\r\n                }\r\n                \r\n            },\r\n            rotateImg(img,direction,step,isBig=false){\r\n                var min_step = 0;\r\n                var max_step = 3;\r\n                if (img == null) return;\r\n                //img的高度和宽度不能在img元素隐藏后获取，否则会出错    \r\n                var height = img.height;\r\n                var width = img.width;\r\n                \r\n                if (step == null) {\r\n                    step = min_step;\r\n                }\r\n                if (direction == 'right') {\r\n                    step++;\r\n                    //旋转到原位置，即超过最大值    \r\n                    step > max_step && (step = min_step);\r\n                } else {\r\n                    step--;\r\n                    step < min_step && (step = max_step);\r\n                }   \r\n                var canvas = document.createElement('canvas')  \r\n                \r\n                //旋转角度以弧度值为参数    \r\n                var degree = step * 90 * Math.PI / 180;\r\n                var ctx = canvas.getContext('2d');\r\n                canvas.width = height;\r\n                canvas.height = width;\r\n                ctx.rotate(degree);\r\n                ctx.drawImage(img, 0, -height);\r\n                switch (step) {\r\n                    case 0:\r\n                        canvas.width = width;\r\n                        canvas.height = height;\r\n                        ctx.drawImage(img, 0, 0);\r\n                        break;\r\n                    case 1:\r\n                        canvas.width = height;\r\n                        canvas.height = width;\r\n                        ctx.rotate(degree);\r\n                        ctx.drawImage(img, 0, -height);\r\n                        break;\r\n                    case 2:\r\n                        canvas.width = width;\r\n                        canvas.height = height;\r\n                        ctx.rotate(degree);\r\n                        ctx.drawImage(img, -width, -height);\r\n                        break;\r\n                    case 3:\r\n                        canvas.width = height;\r\n                        canvas.height = width;\r\n                        ctx.rotate(degree);\r\n                        ctx.drawImage(img, -width, 0);\r\n                        break;\r\n                }\r\n                var newImg=canvas.toDataURL()\r\n                \r\n                if(isBig){\r\n                    this.bigImgUrl=newImg\r\n                    this.bigStep=step\r\n                    this.initBox()\r\n                }else{\r\n                    this.imgUrl=newImg\r\n                    this.step=step\r\n                    this.$nextTick(()=>{\r\n                        this.initBox()\r\n                    })\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .magnifier-box{\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        overflow: hidden;\r\n        position: relative;\r\n        .edit-wrap{\r\n            position: absolute;\r\n            top: 5px;\r\n            right: 0;\r\n            z-index: 9999999;\r\n            background: rgba(0,0,0,0.4);\r\n            padding: 5px 15px 0 15px;\r\n            border-radius: 15px;\r\n            .rotate-left{\r\n                display: inline-block;\r\n                cursor: pointer;\r\n                width: 16px;\r\n                height: 16px;\r\n                background: url(../rotate.png);\r\n                background-size: 100% 100%;\r\n                -moz-transform:scaleX(-1);\r\n                -webkit-transform:scaleX(-1);\r\n                -o-transform:scaleX(-1);\r\n                transform:scaleX(-1);\r\n                /*IE*/\r\n                filter:FlipH;\r\n            }\r\n            .rotate-right{\r\n                margin-left: 10px;\r\n                cursor: pointer;\r\n                display: inline-block;\r\n                width: 16px;\r\n                height: 16px;\r\n                background: url(../rotate.png);\r\n                background-size: 100% 100%;\r\n            }\r\n        }\r\n        img{\r\n            width: 100%;\r\n        };\r\n        .mouse-cover{\r\n            position: fixed;\r\n            background-color: rgba(0,0,0,0.5);\r\n            cursor:move\r\n        };\r\n        .mouse-cover-canvas{\r\n            position:fixed;\r\n            left:100%;\r\n            top:0;\r\n            width:100%;\r\n            height:100%;\r\n        }\r\n        &.vertical{\r\n            img{\r\n                height: 100%;\r\n                width: auto\r\n            }\r\n        }\r\n    }\r\n</style>\r\n\r\n"]}]}